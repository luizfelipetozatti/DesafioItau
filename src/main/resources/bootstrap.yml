spring:
  application:
    group: itau
    name: api-transferencia
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      enable.auto.commit: false
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  data:
    mongodb:
      database: api_transferencia
      uri: mongodb://localhost:27017
      replicaSet: repDB

resilience4j:
  circuitbreaker:
    configs:
      default:
        register-health-indicator: true
        sliding-window-size: 100
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 5000
        sliding-window-type: COUNT_BASED
        failure-rate-threshold: 50
        slow-call-rate-threshold: 100
        slow-call-duration-threshold: 6000
    instances:
      defaultCircuitBreaker:
        baseConfig: default

external-api:
  clientes:
    name: clientes
    url: http://localhost:9090/clientes
    dados-endpoint: /{idCliente}
  contas:
    name: contas
    url: http://localhost:9090/contas
    dados-endpoint: /{idConta}
    saldo-endpoint: /saldos
  notificacoes:
    name: bacen
    url: http://localhost:9090/notificacoes

transferencia:
  kafka:
    group-id: transferencias-group-id
    topicos:
      transferencias: transferencias-topico